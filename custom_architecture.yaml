# YOLOv12 ðŸš€ small-object turbo variant (P2â€“P5)
nc: 80
scales:
  n: [0.50, 0.50, 1024]
  s: [0.50, 0.50, 1024]
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv,   [64, 3, 2]]            # 0-P1/2
  - [-1, 1, Conv,   [128, 3, 2, 1, 2]]     # 1-P2/4
  - [-1, 2, C3k2,   [256, False, 0.25]]    # 2  (P2/4 feature, rich detail; tap for P2)
  - [-1, 1, Conv,   [256, 3, 2, 1, 4]]     # 3-P3/8
  - [-1, 2, C3k2,   [512, False, 0.25]]    # 4
  - [-1, 1, Conv,   [512, 3, 2]]           # 5-P4/16
  - [-1, 4, A2C2f,  [512, True, 4]]        # 6
  - [-1, 1, Conv,   [1024, 3, 2]]          # 7-P5/32
  - [-1, 4, A2C2f,  [1024, True, 1]]       # 8 (P5)

# ... same backbone ...

head:
  # P5 -> P4
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]]
  - [-1, 2, A2C2f, [512, False, -1]]      # 11 (P4 head)

  # P4 -> P3
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]]
  - [-1, 2, A2C2f, [256, False, -1]]      # 14 (P3 head)

  # P3 -> P2  (<< changed to 256 everywhere here)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 2], 1, Concat, [1]]
  - [-1, 1, Conv,  [256, 3, 1]]           # was 192
  - [-1, 2, A2C2f, [256, False, -1]]      # was 192

  # Down paths
  - [-1, 1, Conv,  [256, 3, 2]]
  - [[-1, 14], 1, Concat, [1]]
  - [-1, 2, A2C2f, [256, False, -1]]

  - [-1, 1, Conv,  [512, 3, 2]]
  - [[-1, 11], 1, Concat, [1]]
  - [-1, 2, A2C2f, [512, False, -1]]

  - [-1, 1, Conv,  [512, 3, 2]]
  - [[-1, 8],  1, Concat, [1]]
  - [-1, 2, C3k2, [1024, True]]

  - [[18, 21, 24, 27], 1, Detect, [nc]]   # Detect(P2,P3,P4,P5)
